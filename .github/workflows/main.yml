name: Full CI/CD with Auto Docker Setup

on:
  push:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  docker:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/nodejs-demo-app:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/nodejs-demo-app:latest

  deploy:
    needs: docker
    runs-on: ubuntu-latest
    env:
      DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
    steps:
      - name: Decode and save SSH key
        run: |
          echo "${{ secrets.SSH_KEY }}" | base64 -d > private_key.pem
          chmod 600 private_key.pem

      - name: Deploy to remote server
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${{ secrets.SSH_USERNAME }}@${{ secrets.SERVER_IP }} "
            if ! command -v docker &> /dev/null; then
              echo 'Installing Docker...'
              curl -fsSL https://get.docker.com | sh
              sudo usermod -aG docker \$USER
            fi

            docker pull \$DOCKER_USER/nodejs-demo-app:latest
            docker stop nodejs-demo || true
            docker rm nodejs-demo || true
            docker run -d --name nodejs-demo -p 80:3000 \$DOCKER_USER/nodejs-demo-app:latest
          "
